{"version":3,"sources":["hooks/useForm.js","helpers/fetch.js","types/types.js","actions/auth.js","components/auth/LoginScreen.js","actions/ui.js","helpers/CalendarEvent.js","actions/events.js","components/calendar/CalendarModal.js","components/calendar/CalendarEvent.js","helpers/calendar-messages-es.js","components/ui/Navbar.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","reducers/uiReducers.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","handleImageChange","url","src","baseUrl","process","fetchSinToken","endpoint","data","method","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","dispatch","useDispatch","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","uiOpenModal","prepareEvents","events","map","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","title","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","modalOpen","useSelector","state","ui","activeEvent","calendar","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","auth","evento","_id","eventStartAddNew","minDate","autoComplete","rows","CalendarEvent","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","Navbar","onClick","clear","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ead072d.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {} ) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n            \r\n        });\r\n    }\r\n\r\n    const handleImageChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            url: target.src\r\n            \r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset, handleImageChange ];\r\n\r\n}\r\n\r\n\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n    \r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n    \r\n};\r\n\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n    \r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem( 'token' ) || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n    \r\n};\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n    \r\n    \r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] event logout',\r\n\r\n    eventStartAddNew: '[event] Start Add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start Token Renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n    \r\n    \r\n}","import { fetchSinToken, fetchConToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth', {email, password}, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login( {\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n        \r\n    }\r\n};\r\n\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', { name, email, password }, 'POST' )\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n};\r\n\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew' )\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n        \r\n    }\r\n\r\n};\r\n\r\n\r\nexport const startLogout = () => {\r\n        localStorage.clear();\r\n        return {type: types.authLogout}\r\n};\r\n\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\n\r\n","import React from 'react';\r\nimport '../../styles/login.css';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'didiel@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'didiel',\r\n        rEmail: 'didiel@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2  } = formRegisterValues;\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Los campos de contraseña deben tener el mismo valor', 'error');\r\n        } else {\r\n            dispatch( startRegister( rName, rEmail, rPassword1 ) );\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"container login-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 login-form-1\">\r\n                        <h3>Ingreso</h3>\r\n                        <form onSubmit={ handleLogin }>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Correo\"\r\n                                    name=\"lEmail\"\r\n                                    value={ lEmail }\r\n                                    onChange={ handleLoginInputChange }\r\n                                    />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña\"\r\n                                    name=\"lPassword\"\r\n                                    value={ lPassword }\r\n                                    onChange={ handleLoginInputChange }\r\n                                    />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"submit\"\r\n                                    className=\"btnSubmit\"\r\n                                    value=\"Login\" \r\n                                    />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 login-form-2\">\r\n                        <h3>Registro</h3>\r\n                        <form onSubmit={ handleRegister }>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Nombre\"\r\n                                    name=\"rName\"\r\n                                    value={ rName }\r\n                                    onChange={ handleRegisterInputChange }\r\n                                    />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Correo\"\r\n                                    name=\"rEmail\"\r\n                                    value={ rEmail }\r\n                                    onChange={ handleRegisterInputChange }\r\n                                    />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña\"\r\n                                    name=\"rPassword1\"\r\n                                    value={ rPassword1 }\r\n                                    onChange={ handleRegisterInputChange }\r\n                                    />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Repita la contraseña\"\r\n                                    name=\"rPassword2\"\r\n                                    value={ rPassword2 }\r\n                                    onChange={ handleRegisterInputChange }\r\n                                    />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"submit\" \r\n                                    className=\"btnSubmit\" \r\n                                    value=\"Crear cuenta\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import moment from \"moment\";\r\n\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n\r\n    return events.map(\r\n        e => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        }) );\r\n    \r\n};","import { types } from \"../types/types\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/CalendarEvent\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken( 'events', event, 'POST' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                console.log( event )\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)        \r\n        }\r\n    }\r\n};\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const setActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken( `events/${ event.id }`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg , 'error')\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n};\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { activeEvent } = getState().calendar;\r\n\r\n        try {\r\n            const resp = await fetchConToken( `events/${ activeEvent.id }`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg , 'error')\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n};\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents( body.eventos );\r\n            dispatch( eventLoaded( events ) );\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n};\r\n\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\n\r\nexport const eventLogout = (args) => ({\r\n    type: types.eventLogout\r\n});","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\n\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState( nowPlus1.toDate() );\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const dispatch = useDispatch();\r\n    const {modalOpen} = useSelector(state => state.ui)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const [formValues, setFormValues] = useState( initEvent )\r\n    const { title, notes, start, end } = formValues;\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent )\r\n        }else {\r\n            setFormValues( initEvent )\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ( {target} ) => {\r\n        setFormValues( {\r\n            ...formValues,\r\n            [ target.name ]: target.value\r\n        } );\r\n    };\r\n    \r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n    };\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setDateStart( e );\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    };\r\n    \r\n    const handleEndDateChange = ( e ) => {\r\n        setDateEnd( e );\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    };\r\n\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n        };\r\n\r\n        if ( title.trim().length < 2 ) {\r\n            return setTitleValid(false);\r\n        };\r\n        \r\n\r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) )\r\n        } else {\r\n            dispatch( eventStartAddNew( formValues ) );\r\n        }\r\n        \r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    };\r\n\r\n    \r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n        //   onAfterOpen={afterOpenModal}\r\n          onRequestClose={ closeModal }\r\n          style={customStyles}\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n        \r\n            <h1> { activeEvent ?'Editar Evento' :'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        minDate={ dateStart }\r\n                        value={ dateEnd }\r\n                        className=\"form-control\"\r\n                    />                \r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !titleValid && 'is-invalid' } `}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        \r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n    \r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventLogout } from '../../actions/events';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n        dispatch( eventLogout() );\r\n    };\r\n    \r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = ( ) => {\r\n        dispatch( uiOpenModal() );\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickDelete = ( ) => {\r\n        dispatch( eventStartDelete() );\r\n    };\r\n    \r\n    \r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleClickDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { CalendarEvent } from './CalendarEvent';\r\n\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { setActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( eventStartLoading() );\r\n        \r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n    \r\n    const onSelectEvent = (e) => {\r\n        dispatch( setActive( e ) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    };\r\n\r\n    const onSelectSlot = ( e ) => {\r\n        dispatch( eventClearActiveEvent() )\r\n    };\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        \r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            \r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            \r\n            {\r\n                activeEvent && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n\r\n                ( !isAuthenticated )\r\n                ? ( <Component {...props} /> )\r\n                : ( <Redirect to=\"/\" /> )\r\n            )}\r\n\r\n        />\r\n            \r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    // localStorage.setItem('lastPath', rest.location.pathname + rest.location.search );\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                ? ( <Component {...props} /> )\r\n                : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( startChecking() );\r\n        \r\n    }, [ dispatch ])\r\n\r\n\r\n    if ( checking ) {\r\n        return (<h5>Espere...</h5>)\r\n        \r\n    }\r\n    \r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact\r\n                        path=\"/login\"\r\n                        component={LoginScreen}\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                    <Redirect to='/login' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n    \r\n};","import { types } from \"../types/types\";\r\n\r\n/*\r\n{\r\n        id: 'hvu76jhvbll',\r\n        title: 'Cumpleaños',\r\n        start: moment().toDate(), // new Date()\r\n        end: moment().add( 2, 'hours' ).toDate(),\r\n        notes: 'Comprar el pastel',\r\n        user: {\r\n            _id: '123',\r\n            name: 'Didiel'\r\n        }\r\n    }\r\n*/\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n    \r\n    switch ( action.type ) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [ \r\n                    action.payload, \r\n                    ...state.events ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return { \r\n                ...state,\r\n                events: state.events.map( (event) => \r\n                    event.id === action.payload.id\r\n                        ? action.payload\r\n                        : event\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return { \r\n                ...state,\r\n                events: state.events.filter( \r\n                    event => event.id !== state.activeEvent.id\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n};","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        \r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        \r\n        case types.authLogout:\r\n            return { }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n};","import { combineReducers } from \"redux\";\r\nimport { uiReducer } from \"./uiReducers\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { rootReducer } from '../reducers/rootReducers';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer, \r\n    composeEnhancers(\r\n        applyMiddleware(thunk)    \r\n    )\r\n);\r\n\r\n","import React from 'react'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n                <AppRouter />\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles/styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}